# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

# Enable support for MSVC_RUNTIME_LIBRARY
cmake_policy(SET CMP0091 NEW)
set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(UnknownKit)

include("cmake/Qt5Helpers.cmake")

# Packages
find_package(Qt6 REQUIRED
	COMPONENTS
		Widgets
		Core5Compat
)

# Target: UnknownKitGUI
set(UnknownKitGUI_SOURCES
	"src/gui/MainWindow.cpp"
	"src/gui/main.cpp"
	"src/gui/MainWindow.h"
	"src/gui/MainWindow.ui"
	"src/gui/resource.qrc"
	cmake.toml
)

add_executable(UnknownKitGUI)

target_sources(UnknownKitGUI PRIVATE ${UnknownKitGUI_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${UnknownKitGUI_SOURCES})

target_include_directories(UnknownKitGUI PRIVATE
	include
	"src/lib"
)

target_link_libraries(UnknownKitGUI PRIVATE
	Qt6::Widgets
	Qt6::Core5Compat
	UtilsLib
)

if(MSVC) # msvc
	target_link_options(UnknownKitGUI PRIVATE
		"/SUBSYSTEM:WINDOWS"
	)
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT UnknownKitGUI)
endif()

set(CMKR_TARGET UnknownKitGUI)
# Enable Qt moc/rrc/uic support
target_qt(${CMKR_TARGET})

# Target: UtilsLib
set(UtilsLib_SOURCES
	"src/lib/UtilsLib/UtilsLib.Random.cpp"
	"src/lib/UtilsLib/UtilsLib.cpp"
	"src/lib/UtilsLib/UtilsLib.h"
	cmake.toml
)

add_library(UtilsLib STATIC)

target_sources(UtilsLib PRIVATE ${UtilsLib_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${UtilsLib_SOURCES})

target_include_directories(UtilsLib PUBLIC
	include
)

install(
	TARGETS
		UnknownKitGUI
	DESTINATION
		bin
	COMPONENT
		UnknownKitGUI
)
